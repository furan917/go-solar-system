name: Code Quality & Build

on:
  push:
    branches:
      - main
  pull_request:
    types:
      - opened
      - synchronize
  workflow_dispatch:

env:
  GO_VERSION: '1.20'

jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set GOPATH
        run: echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

      - name: Download dependencies
        run: go mod download

      - name: Run tests
        run: go test -v ./...

  build:
    needs: tests
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set GOPATH
        run: echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

      - name: Download dependencies
        run: go mod download

      - name: Build
        run: go build

  fmt:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set GOPATH
        run: echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

      - name: Download dependencies
        run: go mod download

      - name: run go fmt
        run: |
          go fmt ./...
          GIT_DIFF=$(git diff)
          if [ -n "$GIT_DIFF" ]; then
            echo "::warning::Improvements can be made with go fmt. Run 'go fmt' locally and commit the changes as appropriate."
            echo "$GIT_DIFF"
          fi
        continue-on-error: true

  tidy:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ env.GO_VERSION }}

      - name: Set GOPATH
        run: echo "GOPATH=$(go env GOPATH)" >> $GITHUB_ENV

      - name: Download dependencies
        run: go mod download

      - name: Check go.mod and go.sum
        run: |
          go mod tidy
          GIT_DIFF=$(git diff)
          if [ -n "$GIT_DIFF" ]; then
            echo "::warning::Improvements can be made with go mod tidy. Run 'go mod tidy' locally and commit the changes as appropriate."
            echo "$GIT_DIFF"
          fi
        continue-on-error: true
